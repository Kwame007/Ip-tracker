{"mappings":"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","sources":["node_modules/@swc/helpers/src/_async_to_generator.js","node_modules/@swc/helpers/src/_create_class.js","node_modules/regenerator-runtime/runtime.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","main.js","node_modules/@swc/helpers/src/_define_property.js","node_modules/@swc/helpers/src/_class_call_check.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","import { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\n\n// global variables\n// const input = document.querySelector(\"#ip\");\n// const inputButton = document.querySelector(\".map-btn\");\n// const map = document.querySelector(\"#map\");\n\n// request\nconst request = async function (url) {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    console.log(data);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// request(\n//   \"https://geo.ipify.org/api/v2/country?apiKey=at_poCCdRbBxUw4qxilYRLhRXy3eWzzu&ipAddress=8.8.8.8\"\n// );\n\n// app class\nconst App = class {\n  // private class fields\n  _zoomLevel = 4;\n  constructor() {\n    // draw map\n    this._currentPosition();\n  }\n\n  // get current location\n  _getCurrentLocation() {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  }\n\n  // draw map base on current position\n  async _currentPosition() {\n    try {\n      // get current position\n      const {\n        coords: { latitude, longitude },\n      } = await this._getCurrentLocation();\n\n      const map = new Map({\n        target: \"map\",\n        layers: [\n          new TileLayer({\n            source: new OSM(),\n          }),\n        ],\n        view: new View({\n          center: [latitude, longitude],\n          zoom: this._zoomLevel,\n        }),\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n};\nconst app = new App();\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"names":["$32eaa704beaa3a98$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","this","args","arguments","apply","err","undefined","$0169bf61b3a232a5$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","$39d7cefc4e35d7d3$var$runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","$39d7cefc4e35d7d3$exports","regeneratorRuntime","accidentalStrictMode","globalThis","Function","$198f17545c774c60$export$2e2bcd8739ae039","Disposable","disposed","dispose","disposeInternal","$242d04b4abe8e74a$export$4e734a3b32fb971b","a","b","$242d04b4abe8e74a$export$8a3786cc03fdb777","arr","direction","n","$242d04b4abe8e74a$export$8b58be045bf06082","data","extension","Array","isArray","$242d04b4abe8e74a$export$e9bab7fafb253603","arr1","arr2","len1","$e8bb49b0723cf385$export$22e23a2304399231","$e8bb49b0723cf385$export$8f11cee4bdc7e668","$e8bb49b0723cf385$export$1cd1943b3a73bbe8","$b72bee802ee7837c$export$817eb92a8194bab0","$b72bee802ee7837c$var$uidCounter_","$b72bee802ee7837c$export$5e82334337e0f204","ol_uid","String","$b72bee802ee7837c$export$a4ad2735b021c132","$557f882b5755ab40$var$ua","navigator","userAgent","toLowerCase","$557f882b5755ab40$export$8442bdfd18b7b8a6","indexOf","$557f882b5755ab40$export$39dfd62a25e0fe93","$557f882b5755ab40$export$76c0a3b101d93136","$557f882b5755ab40$export$6b83a0446fc26f94","devicePixelRatio","$557f882b5755ab40$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","$557f882b5755ab40$export$716f8695eedb9bad","Image","decode","$557f882b5755ab40$export$f751ce96c6c4e4fc","passive","options","get","window","addEventListener","removeEventListener","$d51b57da984548f6$export$2e2bcd8739ae039","_super","AssertionError","code","_this","message","split","$d51b57da984548f6$var$__extends","$260eb39d4574b27d$export$a7a9523472993e97","assertion","errorCode","$d51b57da984548f6$exports","default","$67dae15869f57ba2$var$transformStringDiv","$67dae15869f57ba2$export$5635d7ef4b8fee1c","transform","coordinate","x","y","$67dae15869f57ba2$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$67dae15869f57ba2$export$bd70ea2a93c0fa4","source","mat","det","c","d","e","f","$67dae15869f57ba2$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$42857dc1e4e39ae1$export$2e2bcd8739ae039","$2034d68cc04dd519$export$2e2bcd8739ae039","$09aee13076acae13$export$8aceca7c77505534","coordinates","extent","$09aee13076acae13$export$fe201bb3bbe031e9","ii","$09aee13076acae13$export$1f820e3920fa5715","$09aee13076acae13$export$cbe64c389534206f","dx","dy","$09aee13076acae13$export$ac68c24d37ca240f","$09aee13076acae13$export$805bdfd6d6690e97","$09aee13076acae13$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$09aee13076acae13$export$958e3e1a02eac4b6","opt_extent","$09aee13076acae13$export$3e2152b047719fa1","$09aee13076acae13$export$e9bab7fafb253603","extent1","extent2","$09aee13076acae13$export$30570204156ffd18","flatCoordinates","offset","end","stride","$09aee13076acae13$export$f1dab130b92b85a9","min","max","$09aee13076acae13$export$f9ed8a3d123a08e2","callback","val","$09aee13076acae13$export$8d09f5e2e1bf560d","$09aee13076acae13$export$e77c1cf70445e168","$09aee13076acae13$export$b84fa077c8b05295","$09aee13076acae13$export$cb1538b07e6964ff","$09aee13076acae13$export$520c40045967cb15","area","$09aee13076acae13$export$dd1bc94b04021eeb","$09aee13076acae13$export$3c49c185de0c2bfc","$09aee13076acae13$export$c08559766941f856","$09aee13076acae13$export$c91255cadecfe081","$09aee13076acae13$export$a1cfd206661d0801","corner","$09aee13076acae13$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$09aee13076acae13$export$72209efa88586d42","intersection","$09aee13076acae13$export$7b0a31e10bbff018","$09aee13076acae13$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","l","$09aee13076acae13$var$_boundingExtentXYs","$171e0dde495a42af$export$7d15b64cf5a3a4c4","$171e0dde495a42af$export$2e2fd1ad24e4d350","cosh","exp","$171e0dde495a42af$export$b9fae0bba9d9094d","log2","log","LOG2E","$171e0dde495a42af$export$251bb0a9cef172e6","t","$171e0dde495a42af$export$88e6ebb4fe54f538","$171e0dde495a42af$export$56cb859c01fa134d","angleInRadians","PI","$171e0dde495a42af$export$cba01ba138429a1d","angleInDegrees","$171e0dde495a42af$export$ba467bec01d66def","r","$171e0dde495a42af$export$3a89f8d6f6bf6c9f","$50211efa3313caf5$var$HEX_COLOR_RE_","$50211efa3313caf5$var$NAMED_COLOR_RE_","$50211efa3313caf5$export$590567be997858b6","color","g","$50211efa3313caf5$export$f84e8e69fd4488a5","$50211efa3313caf5$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$50211efa3313caf5$export$a3295358bff77e","$2d3f65ee78aa7b11$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$2d3f65ee78aa7b11$var$getKey","set","setSize","maxCacheSize","$2d3f65ee78aa7b11$export$747ccdf771a87ab8","$23cc37b221334df5$export$2e2bcd8739ae039","BaseEvent","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$f182d89dddef1ea8$export$2e2bcd8739ae039","$d57f519927fa72cd$export$e6e34fd1f2686227","assign","var_sources","output","$d57f519927fa72cd$export$42ffd38884aecdac","property","$d57f519927fa72cd$export$a5c4301012ad6f07","$d57f519927fa72cd$export$dd1bc94b04021eeb","$ca140b686b49c1e3$export$2e2bcd8739ae039","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$ca140b686b49c1e3$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","index","splice","$17528e13835ea298$export$2e2bcd8739ae039","$ddbfda1fb7b83a89$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$ddbfda1fb7b83a89$export$8d2a95bc11b44725","$ddbfda1fb7b83a89$export$b0a21c8b3c1c921","$b205a5a0a479f629$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$b205a5a0a479f629$var$__extends","changed","getRevision","len","ol_key","$b205a5a0a479f629$export$b7ef3f8527533384","$ca140b686b49c1e3$exports","$b205a5a0a479f629$export$2e2bcd8739ae039","$02ff1a30291f579c$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$02ff1a30291f579c$var$__extends","$02ff1a30291f579c$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$b205a5a0a479f629$exports","$de08933662e889cc$export$2e2bcd8739ae039","$abe2849bf275faed$export$2e2bcd8739ae039","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$abe2849bf275faed$var$__extends","getClassName","getLayerState","opt_managed","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$02ff1a30291f579c$exports","$6afba345795dd0eb$export$2e2bcd8739ae039","$10a428a553b91e25$export$2e2bcd8739ae039","$3f598d8186f667d5$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$3f598d8186f667d5$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","$3f598d8186f667d5$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$abe2849bf275faed$exports","$9c25d20f9d7ab135$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$9c25d20f9d7ab135$export$bb628a54ab399bc9","cosAngle","sinAngle","$9c25d20f9d7ab135$export$24e2b27d1ff0c1d5","projection","opt_sourceExtentWidth","projectionExtent","worldsAway","canWrapX","sourceExtentWidth","floor","$4d624cc5d18fde9b$var$expireIconCache","$4d624cc5d18fde9b$export$2e2bcd8739ae039","MapRenderer","map_","$4d624cc5d18fde9b$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","feature","geometry","translatedCoordinate","worldWidth","$9c25d20f9d7ab135$export$39a9ce3624977b84","offsets","layerStates","numLayers","matches","tmpCoord","j","$3f598d8186f667d5$exports","inView","getWrapX","callback_1","order","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$38088ea21604ea9d$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","$38088ea21604ea9d$var$__extends","$71fff7b7ffdcca6e$export$981241db82723ce2","$71fff7b7ffdcca6e$export$4d4f8be70b656192","$71fff7b7ffdcca6e$export$e16017ac68d14492","$71fff7b7ffdcca6e$var$fontRegEx","RegExp","$71fff7b7ffdcca6e$var$fontRegExMatchIndex","$71fff7b7ffdcca6e$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$71fff7b7ffdcca6e$export$52ec625a6a53b6a6","$da5bbe25d8fad2eb$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$da5bbe25d8fad2eb$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$da5bbe25d8fad2eb$export$1d0aa160432dfea5","$f3299d0ba5b570c1$export$1d36981fcadac93b","console","warn","$f3299d0ba5b570c1$var$measureFont","$f3299d0ba5b570c1$var$measureContext","$f3299d0ba5b570c1$export$7fdcec604f0b1fa7","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$f3299d0ba5b570c1$export$4ea92329b673abd1","check","fonts","font","clearInterval","$f3299d0ba5b570c1$var$measureText","measureText","$d8a652e4527f1969$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","$71fff7b7ffdcca6e$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$d8a652e4527f1969$var$__extends","event_1","$38088ea21604ea9d$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$da5bbe25d8fad2eb$export$caeacfe04f52533a","display","getDataAtPixel","$4d624cc5d18fde9b$exports","$d9a0ab5d45e10d29$export$2e2bcd8739ae039","$55a45667519a063f$var$Property","$55a45667519a063f$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$55a45667519a063f$var$__extends","$55a45667519a063f$export$2e2bcd8739ae039","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","getArray","item","insertAt","elem","removeAt","remove","setAt","opt_except","$fbe1f30b9b0811de$var$Property","$fbe1f30b9b0811de$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$55a45667519a063f$exports","setLayers","$fbe1f30b9b0811de$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$51fcb9efdec94cd2$export$2e2bcd8739ae039","MapEvent","$51fcb9efdec94cd2$var$__extends","$dcc91a0eaf5c85b1$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$dcc91a0eaf5c85b1$var$__extends","getEventPixel","getCoordinateFromPixel","$51fcb9efdec94cd2$exports","$fb224f2039acedbe$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$f7f6b6491b2890ed$export$2e2bcd8739ae039","$308a4eee2e11ac9e$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$308a4eee2e11ac9e$var$__extends","emulateClick_","pointerEvent","newEvent","$dcc91a0eaf5c85b1$exports","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$a85542ba6ee181e9$export$2e2bcd8739ae039","$66376b6b243d2dc1$export$2e2bcd8739ae039","$dac38e077a8a1495$export$b4af72c40fd57063","$dac38e077a8a1495$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b60da4fc04596e98$export$2e2bcd8739ae039","$286f240d744f313a$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$286f240d744f313a$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$286f240d744f313a$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$5a8dbd971169bbba$export$2e2bcd8739ae039","$02478b6026332846$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$02478b6026332846$export$1482081eec883108","$02478b6026332846$export$2e2bcd8739ae039","$282e8a7f99c41353$export$2e2bcd8739ae039","$c80cb2b125b4e0d9$export$2e2bcd8739ae039","$6f70a5e237bbd780$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$a0a3dd962f5651db$export$2d2c9be8b5b863f","$a0a3dd962f5651db$export$f3928063e5e96d35","$a0a3dd962f5651db$export$21e6da8a7375dfe8","$a0a3dd962f5651db$export$ae9d6ed80df710e5","$a0a3dd962f5651db$export$d26945d1ad52feeb","tan","$a0a3dd962f5651db$var$EPSG3857Projection","EPSG3857Projection","point","$a0a3dd962f5651db$var$__extends","$a0a3dd962f5651db$export$b508d7ad9a891c1b","$a0a3dd962f5651db$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$a0a3dd962f5651db$export$8c71322ec28ed6b4","atan","$c0e91db6b9cdad65$export$21e6da8a7375dfe8","$c0e91db6b9cdad65$export$1482081eec883108","$c0e91db6b9cdad65$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$c0e91db6b9cdad65$var$__extends","$c0e91db6b9cdad65$export$b508d7ad9a891c1b","$fa1fc08946082439$var$cache","$93a9ea042b1bc378$var$transforms","$93a9ea042b1bc378$export$e16d8520af44a096","destination","sourceCode","destinationCode","$1f8fb04b1e88a5cd$export$63f2df7bd7371262","$1f8fb04b1e88a5cd$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$1f8fb04b1e88a5cd$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$51ce273c1692e987$export$dd516654c5f598fb","$51ce273c1692e987$export$83e8ab53904f8022","$51ce273c1692e987$export$59ae956cd3e343f7","$fa1fc08946082439$export$e16d8520af44a096","$51ce273c1692e987$export$3988ae62b71be9a3","projectionLike","replace","$51ce273c1692e987$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$51ce273c1692e987$export$e3c4995a701c26a3","vertices","$51ce273c1692e987$export$eeb8392580a05a37","projections","$51ce273c1692e987$export$638ad73f7aafb913","$51ce273c1692e987$export$549167224996a0fb","defaultCode","$51ce273c1692e987$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$93a9ea042b1bc378$export$3988ae62b71be9a3","$51ce273c1692e987$export$fce0c6cfca85ed96","$51ce273c1692e987$export$51186ad6e864892a","$51ce273c1692e987$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$51ce273c1692e987$var$userProjection","$51ce273c1692e987$export$698f563af1ba02a5","$51ce273c1692e987$export$d4b8ec0b96db1ee2","destProjection","$51ce273c1692e987$export$494be3a3a25689ca","$892afa8da6ff9c56$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$892afa8da6ff9c56$export$f883a24d5edde77c","$6f142810539a59f0$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$6f142810539a59f0$var$getSmoothClampedResolution","$6f142810539a59f0$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$639db43e7a8d515a$export$e20fbacbb41798b","$639db43e7a8d515a$export$f883a24d5edde77c","$9a77576133df9d74$export$929e5a82286172a6","pow","$9a77576133df9d74$export$57636bb43b1ccbb0","$9a77576133df9d74$export$9b47139b511b56e4","$9a77576133df9d74$export$45db2fc2f15997e7","$a0a3dd962f5651db$exports","PROJECTIONS","$c0e91db6b9cdad65$exports","fromEPSG4326","toEPSG4326","$6c33523acda28428$export$2e2bcd8739ae039","$93aa503286cf5212$export$b92b2dedcfff79de","opt_dest","dest","$ea4264a4ff6265c9$var$tmpTransform","$ea4264a4ff6265c9$var$Geometry","Geometry","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$ea4264a4ff6265c9$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$09aee13076acae13$export$6a4fe494c558c238","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$ea4264a4ff6265c9$export$2e2bcd8739ae039","$873446fe266f67e7$export$6af0c1b4a8549a43","layout","$873446fe266f67e7$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$873446fe266f67e7$export$2e2bcd8739ae039","SimpleGeometry","$873446fe266f67e7$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$873446fe266f67e7$var$getLayoutForStride","anchorX","anchorY","k","$93aa503286cf5212$export$bb628a54ab399bc9","$93aa503286cf5212$export$dcdf75081b88279d","$93aa503286cf5212$export$d73ee8ef04f5226a","$ea4264a4ff6265c9$exports","$72fefbd983bcbe6a$var$assignClosest","offset1","offset2","$72fefbd983bcbe6a$export$bc2eb611ddf80103","squaredDelta","$72fefbd983bcbe6a$export$fbf31c8f2668ed5a","ends","$72fefbd983bcbe6a$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$72fefbd983bcbe6a$export$5a48a0eefcf14992","$c8eff196dbbc07af$export$5c4daf67e03c190f","$c8eff196dbbc07af$export$47c3746a74384d45","coordinatess","opt_ends","jj","$c6bd32c4126fb342$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$c6bd32c4126fb342$export$51a0620f7a28532b","$c6bd32c4126fb342$export$b84e8d2c4920a0c6","$c6bd32c4126fb342$export$60a9904b67f8d51b","simplifiedEnds","$680fff1ff5967196$export$9c0934e4e9c3f61e","opt_coordinates","$680fff1ff5967196$export$cbb9596fc0f40db2","opt_coordinatess","$71997ce93cb9ec89$export$3c5e1905f889266e","twiceArea","$71997ce93cb9ec89$export$7a8ee541dfdf2ed5","$d331075f6abc3caf$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$d331075f6abc3caf$var$__extends","getArea","$873446fe266f67e7$exports","$e146c4255f752222$export$2e2bcd8739ae039","Point","$e146c4255f752222$var$__extends","$c8eff196dbbc07af$export$60815ead40ec79ab","$a97abfe500512224$export$cedabedc7ac0e138","$a97abfe500512224$export$949a7a3a4b6f34fa","wn","$a97abfe500512224$export$ae868c0f6acc3355","$fbc665810373f014$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$b9216567382fd63e$export$40d8d71841a3d779","coordinatesExtent","ret","$1d929bbb982e7ad1$export$4b80e395e36b5a56","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$09aee13076acae13$export$a6a5a7a461419425","$b9216567382fd63e$export$76dcd8f8f83b6ddb","$b9216567382fd63e$export$830a0dafbb2ef1c5","$765add36bcb2b344$export$741858880c96b18c","tmp","$58c39c2abab0d873$export$318f2842ed17e094","edge","$58c39c2abab0d873$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$58c39c2abab0d873$export$b71b604ddfc778c7","$494141410008044e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$494141410008044e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$e146c4255f752222$exports","getLinearRingCount","getLinearRing","$d331075f6abc3caf$exports","getLinearRings","linearRings","$494141410008044e$export$2e2bcd8739ae039","$494141410008044e$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$494141410008044e$export$c16b671815801c75","$494141410008044e$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$494141410008044e$export$87d6a1539a56e47f","getRadius","startAngle","$b61ec8a9c26a15bd$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$b61ec8a9c26a15bd$var$__extends","resolutionConstraintInfo","$b61ec8a9c26a15bd$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","padding","minZoom_","centerConstraint","$b61ec8a9c26a15bd$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$b61ec8a9c26a15bd$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","animation","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$b61ec8a9c26a15bd$export$ee75376562060184","setHint","updateAnimations_","$b61ec8a9c26a15bd$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","$51ce273c1692e987$export$96bfd09e2cffb006","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$b61ec8a9c26a15bd$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$494141410008044e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$6f142810539a59f0$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$6f142810539a59f0$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$b61ec8a9c26a15bd$export$2e2bcd8739ae039","$0b0c604ff213866b$export$622c471beb1693c7","$0b0c604ff213866b$export$a71a825ff42fb8e1","$e5de9654c10e65fa$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$fbe1f30b9b0811de$exports","view","$b61ec8a9c26a15bd$exports","$e5de9654c10e65fa$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$286f240d744f313a$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$e5de9654c10e65fa$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$308a4eee2e11ac9e$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","parseInt","$2378f1032abec9d1$export$2e2bcd8739ae039","Control","target_","listenerKeys","$2378f1032abec9d1$var$__extends","mapEvent","$a9244539d282f1c5$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$a9244539d282f1c5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$da5bbe25d8fad2eb$export$1e1c9bf5a4ffe0d1","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$2378f1032abec9d1$exports","$1e8af08824c3e884$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$1e8af08824c3e884$var$__extends","resetNorth_","$69299efdbde0e182$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$69299efdbde0e182$var$__extends","zoomByDelta_","currentZoom","newZoom","$fdf462d5ee425342$export$2e2bcd8739ae039","$855af52b0af99805$export$4c486572e961a974","$855af52b0af99805$export$ace321ff2a8016ef","$855af52b0af99805$export$2e2bcd8739ae039","Interaction","setActive","$855af52b0af99805$var$__extends","active","$8685060a4398cf47$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$8685060a4398cf47$var$__extends","stopEvent","shiftKey","$855af52b0af99805$exports","zoomByDelta","$71c992dd435def6e$export$e2a20c553f6c85ce","$71c992dd435def6e$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$71c992dd435def6e$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$71c992dd435def6e$var$isPointerDraggingEvent","$70da2eacd644b700$export$84bf76cd7afc7469","conditions","pass","$70da2eacd644b700$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$70da2eacd644b700$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$70da2eacd644b700$export$d7ddd398f22d79ef","$70da2eacd644b700$export$ba9e5d519bc326ca","$70da2eacd644b700$export$1238ad6b5e7fff70","$70da2eacd644b700$export$fdc892d0d8fe3bfb","$70da2eacd644b700$export$5d31fe68a477cfbb","$70da2eacd644b700$export$e5570ca80cd8fd54","tagName","$70da2eacd644b700$export$abb7acbfa76bf3c4","pointerType","$70da2eacd644b700$export$189f0d593022b199","isPrimary","$a559dc7f92aae2b9$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$a559dc7f92aae2b9$var$__extends","centroid","$71c992dd435def6e$exports","update","begin","getDistance","getAngle","centerpx","$d59c9ac61cc50ba7$export$2e2bcd8739ae039","DragRotate","lastAngle_","$d59c9ac61cc50ba7$var$__extends","$3a69a5cd3d9efe81$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$3a69a5cd3d9efe81$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$ee7f737b890585b1$var$DragBoxEventType","$ee7f737b890585b1$export$7053c33c051365ea","DragBoxEvent","$ee7f737b890585b1$var$__extends","$ee7f737b890585b1$export$2e2bcd8739ae039","DragBox","box_","$3a69a5cd3d9efe81$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$8fefcee995bf9fa2$export$2e2bcd8739ae039","DragZoom","out_","out","$8fefcee995bf9fa2$var$__extends","factor","$ee7f737b890585b1$exports","$fabc923eab7b8d35$export$2e2bcd8739ae039","$58983494123aebad$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$58983494123aebad$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$975fb2a1297d8301$export$2e2bcd8739ae039","KeyboardZoom","$975fb2a1297d8301$var$__extends","charCode","charCodeAt","$16f8404d2308a2e3$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$bf6c611fd4e916b8$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$bf6c611fd4e916b8$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$bf6c611fd4e916b8$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$116bb9adf1461407$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$116bb9adf1461407$var$__extends","rotationDelta","touch0","touch1","$59799bb9abb3d845$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$59799bb9abb3d845$var$__extends","scaleDelta","$18255666c21c3e7d$export$2e2bcd8739ae039","Map","$69299efdbde0e182$exports","zoomOptions","$1e8af08824c3e884$exports","rotateOptions","attribution","$a9244539d282f1c5$exports","attributionOptions","$c2f4f7c3a952c48b$export$ebe90cb607ad99e","altShiftDragRotate","$d59c9ac61cc50ba7$exports","doubleClickZoom","$8685060a4398cf47$exports","zoomDelta","zoomDuration","dragPan","$a559dc7f92aae2b9$exports","pinchRotate","$116bb9adf1461407$exports","pinchZoom","$59799bb9abb3d845$exports","keyboard","$58983494123aebad$exports","$975fb2a1297d8301$exports","mouseWheelZoom","$bf6c611fd4e916b8$exports","shiftDragZoom","$8fefcee995bf9fa2$exports","$73908c9ebef59c42$export$ebe90cb607ad99e","$18255666c21c3e7d$var$__extends","$d8a652e4527f1969$exports","$e5de9654c10e65fa$exports","$b8f9ef608258debf$export$2e2bcd8739ae039","$6d613fff339c23be$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$6d613fff339c23be$var$__extends","getPreload","getUseInterimTilesOnError","$96f1769f0e2cd014$export$2e2bcd8739ae039","$94d311d3e85a3c42$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$94d311d3e85a3c42$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$70e7b28f28588a87$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$70e7b28f28588a87$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","drawImage","getImageData","Uint8Array","$94d311d3e85a3c42$exports","$41c1f55d86eb0ee8$var$TileRange","TileRange","containsTileRange","getHeight","getWidth","$41c1f55d86eb0ee8$export$958e3e1a02eac4b6","$41c1f55d86eb0ee8$export$2e2bcd8739ae039","$4d5b4b2ec243336c$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$4d5b4b2ec243336c$var$__extends","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","Number","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","i_1","drawTileImage","restore","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","alpha","alphaChanged","globalAlpha","endTransition","getImage","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$70e7b28f28588a87$exports","$4d5b4b2ec243336c$export$2e2bcd8739ae039","$9af931ecc3f060e8$export$2e2bcd8739ae039","TileLayer","$9af931ecc3f060e8$var$__extends","$4d5b4b2ec243336c$exports","$6d613fff339c23be$exports","$93650dd9a7608979$export$2e2bcd8739ae039","Tile","interimTile","transition_","transitionStarts_","$93650dd9a7608979$var$__extends","release","refreshInterimChain","getTileCoord","$c2632c8bbff4f1e5$export$2e2bcd8739ae039","ImageBase","$c2632c8bbff4f1e5$var$__extends","getPixelRatio","$8910981f7733f7b9$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","promise","listening_1","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$8910981f7733f7b9$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$c2632c8bbff4f1e5$exports","$479dcb8db4bda8fa$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$479dcb8db4bda8fa$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$8910981f7733f7b9$exports","listenImage","$93650dd9a7608979$exports","$9a1cf96a930d5a58$var$brokenDiagonalRendering_","$288c3ce7a59688cb$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$eca005c166f5ca0a$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$9a1cf96a930d5a58$var$drawTestTriangle","u1","v1","u2","v2","closePath","$9a1cf96a930d5a58$var$verifyBrokenDiagonalRendering","$9a1cf96a930d5a58$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$9a1cf96a930d5a58$export$b3890eb0ae9dca99","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$171e0dde495a42af$export$8240f01c446270e6","$9a1cf96a930d5a58$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$fb80bc4c69234ab8$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$9a1cf96a930d5a58$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$fb80bc4c69234ab8$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","unlistenSources_","$9cdf987200b0aa45$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$f542b78ad7fc0677$export$958e3e1a02eac4b6","opt_tileCoord","$f542b78ad7fc0677$export$92d0df0f1d25c63c","$f542b78ad7fc0677$export$a47fb462a08de82f","$5823c018e97cb242$var$TileCache","TileCache","$5823c018e97cb242$var$__extends","pruneExceptNewestZ","$f542b78ad7fc0677$export$a807b7874eb66454","$5823c018e97cb242$export$2e2bcd8739ae039","$4f588e6ca9a89608$export$2e2bcd8739ae039","$6fd1db52bb150087$var$adaptAttributions","attributionLike","$6fd1db52bb150087$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","$6fd1db52bb150087$var$__extends","refresh","setAttributions","$6986c999812c2763$var$tmpTileCoord","$6986c999812c2763$export$2e2bcd8739ae039","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getOrigin","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$b07b4a254fd8c72a$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$b07b4a254fd8c72a$var$resolutionsFromExtent","$b07b4a254fd8c72a$export$ce88871416242df8","$b07b4a254fd8c72a$export$7b5b6ef8fd55fac4","$b07b4a254fd8c72a$export$a251b12f5601c16f","opt_maxResolution","half","$31e561e541184b11$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$5823c018e97cb242$exports","tmpSize","tileOptions","$31e561e541184b11$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$b07b4a254fd8c72a$export$39a9ce3624977b84","$f542b78ad7fc0677$export$60bedf8e3e3c3dbe","$6fd1db52bb150087$exports","$31e561e541184b11$export$c571855c51e6c4b6","TileSourceEvent","$31e561e541184b11$export$2e2bcd8739ae039","$6d3f395198882205$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$6d3f395198882205$export$436f44dbcc31fea3","templates","tileUrlFunctions","$f542b78ad7fc0677$export$d6af199866bfb566","$6d3f395198882205$export$4229b1d9af69b3be","$5625bdab397b8065$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$5625bdab397b8065$var$__extends","getTileLoadFunction","getTileUrlFunction","getUrls","$31e561e541184b11$exports","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","stopCharCode","fromCharCode","stop_1","$6d3f395198882205$export$2a1fa079bfd73dde","$3102cb6a48eb7b01$var$TileImage","TileImage","$3102cb6a48eb7b01$var$defaultTileLoadFunction","tileClass","$479dcb8db4bda8fa$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$3102cb6a48eb7b01$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$fb80bc4c69234ab8$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$5625bdab397b8065$exports","imageTile","$3102cb6a48eb7b01$export$2e2bcd8739ae039","$c7284426848359a1$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$b07b4a254fd8c72a$export$38500bbeccc864ff","$c7284426848359a1$var$__extends","$3102cb6a48eb7b01$exports","$4613e68d4486e86c$export$4de8a5e77eb994ad","$4613e68d4486e86c$export$2e2bcd8739ae039","OSM","$4613e68d4486e86c$var$__extends","$c7284426848359a1$exports","_callee","response","fetch","_ctx","json","t0","instance","Constructor","_currentPosition","protoProps","staticProps","geolocation","getCurrentPosition","ref","_coords","latitude","longitude","_getCurrentLocation","$18255666c21c3e7d$exports","$9af931ecc3f060e8$exports","$4613e68d4486e86c$exports","_zoomLevel"],"version":3,"file":"index.b30e0a22.js.map"}