{"mappings":"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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","main.js","node_modules/@swc/helpers/src/_define_property.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","import { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\n\n// global variables\n// const input = document.querySelector(\"#ip\");\n// const inputButton = document.querySelector(\".map-btn\");\n// const map = document.querySelector(\"#map\");\n\n// request\nconst request = async function (url) {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    console.log(data);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// request(\n//   \"https://geo.ipify.org/api/v2/country?apiKey=at_poCCdRbBxUw4qxilYRLhRXy3eWzzu&ipAddress=8.8.8.8\"\n// );\n\n// app class\nconst App = class {\n  // private class fields\n  _zoomLevel = 4;\n  constructor() {\n    // draw map\n    this._currentPosition();\n  }\n\n  // get current location\n  _getCurrentLocation() {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  }\n\n  // draw map base on current position\n  async _currentPosition() {\n    try {\n      // get current position\n      const {\n        coords: { latitude, longitude },\n      } = await this._getCurrentLocation();\n\n      const map = new Map({\n        target: \"map\",\n        layers: [\n          new TileLayer({\n            source: new OSM(),\n          }),\n        ],\n        view: new View({\n          center: [latitude, longitude],\n          zoom: this._zoomLevel,\n        }),\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n};\nconst app = new App();\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n"],"names":["$067f9ac7e6a7ca12$export$2e2bcd8739ae039","Disposable","this","disposed","prototype","dispose","disposeInternal","$60dc12dce84fb4e2$export$4e734a3b32fb971b","a","b","$60dc12dce84fb4e2$export$8a3786cc03fdb777","arr","target","direction","n","length","i","$60dc12dce84fb4e2$export$8b58be045bf06082","data","extension","Array","isArray","$60dc12dce84fb4e2$export$e9bab7fafb253603","arr1","arr2","len1","$8a0f41c43a3673ec$export$22e23a2304399231","$8a0f41c43a3673ec$export$8f11cee4bdc7e668","$8a0f41c43a3673ec$export$1cd1943b3a73bbe8","$6abcfe1107f4110c$export$817eb92a8194bab0","Error","$6abcfe1107f4110c$var$uidCounter_","$6abcfe1107f4110c$export$5e82334337e0f204","obj","ol_uid","String","$7dbb54b117a1cf02$var$ua","navigator","userAgent","toLowerCase","$7dbb54b117a1cf02$export$8442bdfd18b7b8a6","indexOf","$7dbb54b117a1cf02$export$39dfd62a25e0fe93","$7dbb54b117a1cf02$export$76c0a3b101d93136","$7dbb54b117a1cf02$export$6b83a0446fc26f94","devicePixelRatio","$7dbb54b117a1cf02$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$7dbb54b117a1cf02$export$716f8695eedb9bad","Image","decode","$7dbb54b117a1cf02$export$f751ce96c6c4e4fc","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$2fff262e5aaa5918$export$2e2bcd8739ae039","_super","AssertionError","code","_this","message","split","call","name","$2fff262e5aaa5918$var$__extends","$b38da05ca355968c$export$a7a9523472993e97","assertion","errorCode","$2fff262e5aaa5918$exports","default","$015b48627391618f$var$transformStringDiv","$015b48627391618f$export$5635d7ef4b8fee1c","transform","coordinate","x","y","$015b48627391618f$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$015b48627391618f$export$bd70ea2a93c0fa4","source","mat","det","c","d","e","f","$015b48627391618f$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$ad72d926c3f8f60f$export$2e2bcd8739ae039","$89c59ad4de1abacc$export$2e2bcd8739ae039","$bc03eabba1c60380$export$8aceca7c77505534","coordinates","extent","$bc03eabba1c60380$export$fe201bb3bbe031e9","ii","$bc03eabba1c60380$export$1f820e3920fa5715","$bc03eabba1c60380$export$cbe64c389534206f","dx","dy","$bc03eabba1c60380$export$ac68c24d37ca240f","$bc03eabba1c60380$export$805bdfd6d6690e97","$bc03eabba1c60380$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$bc03eabba1c60380$export$958e3e1a02eac4b6","opt_extent","$bc03eabba1c60380$export$3e2152b047719fa1","$bc03eabba1c60380$export$e9bab7fafb253603","extent1","extent2","$bc03eabba1c60380$export$30570204156ffd18","flatCoordinates","offset","end","stride","$bc03eabba1c60380$export$f1dab130b92b85a9","min","max","$bc03eabba1c60380$export$f9ed8a3d123a08e2","callback","val","$bc03eabba1c60380$export$8d09f5e2e1bf560d","$bc03eabba1c60380$export$e77c1cf70445e168","$bc03eabba1c60380$export$b84fa077c8b05295","$bc03eabba1c60380$export$cb1538b07e6964ff","$bc03eabba1c60380$export$520c40045967cb15","area","$bc03eabba1c60380$export$dd1bc94b04021eeb","$bc03eabba1c60380$export$3c49c185de0c2bfc","$bc03eabba1c60380$export$c08559766941f856","$bc03eabba1c60380$export$c91255cadecfe081","$bc03eabba1c60380$export$a1cfd206661d0801","corner","$bc03eabba1c60380$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$bc03eabba1c60380$export$72209efa88586d42","intersection","$bc03eabba1c60380$export$7b0a31e10bbff018","$bc03eabba1c60380$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$bc03eabba1c60380$var$_boundingExtentXYs","$31055d1b9520a441$export$7d15b64cf5a3a4c4","value","$31055d1b9520a441$export$2e2fd1ad24e4d350","cosh","exp","$31055d1b9520a441$export$b9fae0bba9d9094d","log2","log","LOG2E","$31055d1b9520a441$export$251bb0a9cef172e6","t","$31055d1b9520a441$export$88e6ebb4fe54f538","$31055d1b9520a441$export$56cb859c01fa134d","angleInRadians","PI","$31055d1b9520a441$export$cba01ba138429a1d","angleInDegrees","$31055d1b9520a441$export$ba467bec01d66def","r","$31055d1b9520a441$export$3a89f8d6f6bf6c9f","$e7c422877b9f21be$var$HEX_COLOR_RE_","$e7c422877b9f21be$var$NAMED_COLOR_RE_","$e7c422877b9f21be$export$590567be997858b6","color","g","undefined","$e7c422877b9f21be$export$f84e8e69fd4488a5","$e7c422877b9f21be$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$e7c422877b9f21be$export$a3295358bff77e","$40225034defd660b$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","src","crossOrigin","$40225034defd660b$var$getKey","set","setSize","maxCacheSize","$40225034defd660b$export$747ccdf771a87ab8","$994767e7dd1824f5$export$2e2bcd8739ae039","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$cb2fba060bde48c2$export$2e2bcd8739ae039","$9fd8a81dd2da270d$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","arguments","hasOwnProperty","$9fd8a81dd2da270d$export$42ffd38884aecdac","object","property","$9fd8a81dd2da270d$export$a5c4301012ad6f07","values","$9fd8a81dd2da270d$export$dd1bc94b04021eeb","$f914489141148667$export$2e2bcd8739ae039","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$f914489141148667$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$aa92024040bf1682$export$2e2bcd8739ae039","$f6633f08b7021828$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$f6633f08b7021828$export$8d2a95bc11b44725","$f6633f08b7021828$export$b0a21c8b3c1c921","$c0cbcbaec4336b5f$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$c0cbcbaec4336b5f$var$__extends","changed","getRevision","len","ol_key","$c0cbcbaec4336b5f$export$b7ef3f8527533384","$f914489141148667$exports","$c0cbcbaec4336b5f$export$2e2bcd8739ae039","$cf5fe22d2b1e10b8$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$cf5fe22d2b1e10b8$var$__extends","$cf5fe22d2b1e10b8$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$c0cbcbaec4336b5f$exports","$922c5acba07bf4ea$export$2e2bcd8739ae039","$cbea3060042ea1ca$export$2e2bcd8739ae039","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$cbea3060042ea1ca$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$cf5fe22d2b1e10b8$exports","$631a3ac7a77bf46a$export$2e2bcd8739ae039","$edde43a4b47bfec8$export$2e2bcd8739ae039","$620da16844c9eb42$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$620da16844c9eb42$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","$620da16844c9eb42$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$cbea3060042ea1ca$exports","$a58318b9dd2ea840$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$a58318b9dd2ea840$export$bb628a54ab399bc9","cosAngle","sinAngle","$a58318b9dd2ea840$export$24e2b27d1ff0c1d5","projection","opt_sourceExtentWidth","projectionExtent","worldsAway","canWrapX","sourceExtentWidth","floor","$92d7c844d4ccb637$var$expireIconCache","$92d7c844d4ccb637$export$2e2bcd8739ae039","MapRenderer","map_","$92d7c844d4ccb637$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","worldWidth","$a58318b9dd2ea840$export$39a9ce3624977b84","slice","offsets","layerStates","numLayers","matches","tmpCoord","j","$620da16844c9eb42$exports","inView","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$51ddd3f45b791663$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$51ddd3f45b791663$var$__extends","$efc90638b7bc7ea3$var$fontRegEx","RegExp","$efc90638b7bc7ea3$var$fontRegExMatchIndex","$efc90638b7bc7ea3$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$efc90638b7bc7ea3$export$52ec625a6a53b6a6","$2d7496fa9caabbf2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$2d7496fa9caabbf2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$2d7496fa9caabbf2$export$1d0aa160432dfea5","$ead62238ca089b29$export$1d36981fcadac93b","console","warn","$ead62238ca089b29$var$measureFont","$ead62238ca089b29$var$measureContext","$ead62238ca089b29$export$7fdcec604f0b1fa7","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$ead62238ca089b29$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","$ead62238ca089b29$var$measureText","measureText","$ac45132462ff44ba$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","$efc90638b7bc7ea3$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$ac45132462ff44ba$var$__extends","event_1","$51ddd3f45b791663$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$2d7496fa9caabbf2$export$caeacfe04f52533a","display","getDataAtPixel","$92d7c844d4ccb637$exports","$02da029b861baf7c$export$2e2bcd8739ae039","$8e42b9310dbadf69$var$Property","$8e42b9310dbadf69$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$8e42b9310dbadf69$var$__extends","$8e42b9310dbadf69$export$2e2bcd8739ae039","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$0553fe8bfd22a1bf$var$Property","$0553fe8bfd22a1bf$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$8e42b9310dbadf69$exports","setLayers","$0553fe8bfd22a1bf$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$f46340e3e83bcbbe$export$2e2bcd8739ae039","MapEvent","$f46340e3e83bcbbe$var$__extends","$9cdecc6f07f1c82b$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$9cdecc6f07f1c82b$var$__extends","getEventPixel","getCoordinateFromPixel","$f46340e3e83bcbbe$exports","$25766752c5fc49ff$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$18642d54b8ad0e01$export$2e2bcd8739ae039","$a4b4e6bda130afb5$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$a4b4e6bda130afb5$var$__extends","emulateClick_","pointerEvent","newEvent","$9cdecc6f07f1c82b$exports","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$d7f9f88a35f0a4e0$export$2e2bcd8739ae039","$c0258c8795f5009d$export$2e2bcd8739ae039","$2bdee6f11781bfd4$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$c6465ad941e7edee$export$2e2bcd8739ae039","$0c18e92d41315937$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$0c18e92d41315937$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$0c18e92d41315937$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$aa88f2929ecad61f$export$2e2bcd8739ae039","$37c562c32cc4876e$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$37c562c32cc4876e$export$1482081eec883108","$37c562c32cc4876e$export$2e2bcd8739ae039","$f0b063a48e960f7d$export$2e2bcd8739ae039","$74ab221ad614a19c$export$2e2bcd8739ae039","$cde14d3e5b3eefa9$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$263d400682f1bb22$export$f3928063e5e96d35","$263d400682f1bb22$export$21e6da8a7375dfe8","$263d400682f1bb22$export$ae9d6ed80df710e5","$263d400682f1bb22$export$d26945d1ad52feeb","tan","$263d400682f1bb22$var$EPSG3857Projection","EPSG3857Projection","point","$263d400682f1bb22$var$__extends","$263d400682f1bb22$export$b508d7ad9a891c1b","$263d400682f1bb22$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$263d400682f1bb22$export$8c71322ec28ed6b4","atan","$aa07642712f5d00c$export$21e6da8a7375dfe8","$aa07642712f5d00c$export$1482081eec883108","$aa07642712f5d00c$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$aa07642712f5d00c$var$__extends","$aa07642712f5d00c$export$b508d7ad9a891c1b","$8e4049879c0292b6$var$cache","$45942085a30dd36c$var$transforms","$45942085a30dd36c$export$e16d8520af44a096","destination","sourceCode","destinationCode","$7f47b2b6734ca7c1$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$7f47b2b6734ca7c1$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$083b62b894f423ea$export$dd516654c5f598fb","$083b62b894f423ea$export$83e8ab53904f8022","$083b62b894f423ea$export$59ae956cd3e343f7","$8e4049879c0292b6$export$e16d8520af44a096","$083b62b894f423ea$export$3988ae62b71be9a3","projectionLike","replace","$083b62b894f423ea$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$083b62b894f423ea$export$e3c4995a701c26a3","vertices","$083b62b894f423ea$export$eeb8392580a05a37","projections","$083b62b894f423ea$export$638ad73f7aafb913","$083b62b894f423ea$export$549167224996a0fb","defaultCode","$083b62b894f423ea$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$45942085a30dd36c$export$3988ae62b71be9a3","$083b62b894f423ea$export$fce0c6cfca85ed96","$083b62b894f423ea$export$51186ad6e864892a","$083b62b894f423ea$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$083b62b894f423ea$var$userProjection","$083b62b894f423ea$export$698f563af1ba02a5","$083b62b894f423ea$export$d4b8ec0b96db1ee2","destProjection","$083b62b894f423ea$export$494be3a3a25689ca","$26d26177e7fc8863$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$26d26177e7fc8863$export$f883a24d5edde77c","$27c0001cb9c6558e$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$27c0001cb9c6558e$var$getSmoothClampedResolution","$27c0001cb9c6558e$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$d8071b70f3993eee$export$e20fbacbb41798b","$d8071b70f3993eee$export$f883a24d5edde77c","$2d31f16c1aeb09ad$export$929e5a82286172a6","pow","$2d31f16c1aeb09ad$export$57636bb43b1ccbb0","$2d31f16c1aeb09ad$export$9b47139b511b56e4","$2d31f16c1aeb09ad$export$45db2fc2f15997e7","$263d400682f1bb22$exports","PROJECTIONS","$aa07642712f5d00c$exports","fromEPSG4326","toEPSG4326","$1c7a2c5df90e8078$export$2e2bcd8739ae039","$3af4f838b6cb9dcb$export$b92b2dedcfff79de","opt_dest","dest","$fc8db94e577427ae$var$tmpTransform","$fc8db94e577427ae$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$fc8db94e577427ae$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$bc03eabba1c60380$export$6a4fe494c558c238","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$1892b6578f95292f$export$6af0c1b4a8549a43","layout","$1892b6578f95292f$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$1892b6578f95292f$export$2e2bcd8739ae039","SimpleGeometry","$1892b6578f95292f$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$1892b6578f95292f$var$getLayoutForStride","anchorX","anchorY","k","$3af4f838b6cb9dcb$export$bb628a54ab399bc9","$3af4f838b6cb9dcb$export$dcdf75081b88279d","$3af4f838b6cb9dcb$export$d73ee8ef04f5226a","$fc8db94e577427ae$exports","$093e47809870b18f$var$assignClosest","offset1","offset2","$093e47809870b18f$export$bc2eb611ddf80103","squaredDelta","$093e47809870b18f$export$fbf31c8f2668ed5a","ends","$093e47809870b18f$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$093e47809870b18f$export$5a48a0eefcf14992","$b298c1bf4f956d0d$export$5c4daf67e03c190f","$b298c1bf4f956d0d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$fc2ee5d30907f8e4$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$fc2ee5d30907f8e4$export$51a0620f7a28532b","$fc2ee5d30907f8e4$export$b84e8d2c4920a0c6","$fc2ee5d30907f8e4$export$60a9904b67f8d51b","simplifiedEnds","$e8ff47aa9d91b49d$export$9c0934e4e9c3f61e","opt_coordinates","$e8ff47aa9d91b49d$export$cbb9596fc0f40db2","opt_coordinatess","$7ef6d601a5e3636e$export$3c5e1905f889266e","twiceArea","$7ef6d601a5e3636e$export$7a8ee541dfdf2ed5","$d6d9c1fccdf63a8e$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$d6d9c1fccdf63a8e$var$__extends","getArea","$1892b6578f95292f$exports","$e5227bc580dffd9f$export$2e2bcd8739ae039","Point","$e5227bc580dffd9f$var$__extends","$b298c1bf4f956d0d$export$60815ead40ec79ab","$156d3f481f27dbb0$export$cedabedc7ac0e138","$156d3f481f27dbb0$export$949a7a3a4b6f34fa","wn","$156d3f481f27dbb0$export$ae868c0f6acc3355","$0a2c1f639869d3f6$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$2d1dfd0238384896$export$40d8d71841a3d779","coordinatesExtent","ret","$67ebe9c6397bae8c$export$4b80e395e36b5a56","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$bc03eabba1c60380$export$a6a5a7a461419425","$2d1dfd0238384896$export$76dcd8f8f83b6ddb","$2d1dfd0238384896$export$830a0dafbb2ef1c5","$b9de3574b905e766$export$741858880c96b18c","tmp","$1100c5443dc4f0ca$export$318f2842ed17e094","edge","$1100c5443dc4f0ca$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$1100c5443dc4f0ca$export$b71b604ddfc778c7","$6a3c804b3b97d8e3$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$6a3c804b3b97d8e3$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$e5227bc580dffd9f$exports","getLinearRingCount","getLinearRing","$d6d9c1fccdf63a8e$exports","getLinearRings","linearRings","$6a3c804b3b97d8e3$export$2e2bcd8739ae039","$6a3c804b3b97d8e3$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$6a3c804b3b97d8e3$export$c16b671815801c75","$6a3c804b3b97d8e3$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$6a3c804b3b97d8e3$export$87d6a1539a56e47f","getRadius","startAngle","$1d85829e4f162dd4$var$animationCallback","returnValue","$1d85829e4f162dd4$export$964345001ee9ac52","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$1d85829e4f162dd4$export$c68d65f9148da196","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$27c0001cb9c6558e$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$27c0001cb9c6558e$export$22ac0f6b219de91a","constraint","$1d85829e4f162dd4$export$4eeaa08dd550e3c0","theta","opt_tolerance","enableRotation","constrainRotation","$1d85829e4f162dd4$export$ee75376562060184","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$1d85829e4f162dd4$var$calculateCenterOn","rotX","rotY","$1d85829e4f162dd4$export$2e2bcd8739ae039","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$1d85829e4f162dd4$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","$083b62b894f423ea$export$96bfd09e2cffb006","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$6a3c804b3b97d8e3$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$d84e394f29cb16d9$export$622c471beb1693c7","$d84e394f29cb16d9$export$a71a825ff42fb8e1","$3c4fb7ee83979696$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$0553fe8bfd22a1bf$exports","view","$1d85829e4f162dd4$exports","$3c4fb7ee83979696$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$0c18e92d41315937$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$3c4fb7ee83979696$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$a4b4e6bda130afb5$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","parseInt","$3a4d01a1be326d12$export$2e2bcd8739ae039","Control","target_","listenerKeys","$3a4d01a1be326d12$var$__extends","mapEvent","$722ae5129753cc75$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$722ae5129753cc75$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$2d7496fa9caabbf2$export$1e1c9bf5a4ffe0d1","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$3a4d01a1be326d12$exports","$ff05a73c45f7d002$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$ff05a73c45f7d002$var$__extends","resetNorth_","$e76ca1c65f4ba421$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$e76ca1c65f4ba421$var$__extends","zoomByDelta_","currentZoom","newZoom","$19499ac299c670e1$export$2e2bcd8739ae039","$b669ebacdd1aa246$export$4c486572e961a974","$b669ebacdd1aa246$export$ace321ff2a8016ef","$b669ebacdd1aa246$export$2e2bcd8739ae039","Interaction","setActive","$b669ebacdd1aa246$var$__extends","active","$d1275b80afe8d488$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$d1275b80afe8d488$var$__extends","stopEvent","shiftKey","$b669ebacdd1aa246$exports","zoomByDelta","$b542e4e2ba2e782c$export$e2a20c553f6c85ce","$b542e4e2ba2e782c$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$b542e4e2ba2e782c$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$b542e4e2ba2e782c$var$isPointerDraggingEvent","$3e5e17450c53a869$export$84bf76cd7afc7469","conditions","pass","$3e5e17450c53a869$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$3e5e17450c53a869$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$3e5e17450c53a869$export$d7ddd398f22d79ef","$3e5e17450c53a869$export$ba9e5d519bc326ca","$3e5e17450c53a869$export$1238ad6b5e7fff70","$3e5e17450c53a869$export$fdc892d0d8fe3bfb","$3e5e17450c53a869$export$5d31fe68a477cfbb","$3e5e17450c53a869$export$e5570ca80cd8fd54","tagName","$3e5e17450c53a869$export$abb7acbfa76bf3c4","pointerType","$3e5e17450c53a869$export$189f0d593022b199","isPrimary","$29127ef89ca20c43$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$29127ef89ca20c43$var$__extends","centroid","$b542e4e2ba2e782c$exports","update","begin","getDistance","getAngle","centerpx","$b082c60249c1f369$export$2e2bcd8739ae039","DragRotate","lastAngle_","$b082c60249c1f369$var$__extends","$c9cf26dd6067738e$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$c9cf26dd6067738e$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$194c5ef596c834b9$var$DragBoxEventType","$194c5ef596c834b9$export$7053c33c051365ea","DragBoxEvent","$194c5ef596c834b9$var$__extends","$194c5ef596c834b9$export$2e2bcd8739ae039","DragBox","box_","$c9cf26dd6067738e$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$17d0f21fd121646e$export$2e2bcd8739ae039","DragZoom","out_","out","$17d0f21fd121646e$var$__extends","factor","$194c5ef596c834b9$exports","$baf63000c12bbd52$export$2e2bcd8739ae039","$2cdf72f37b05b43e$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$2cdf72f37b05b43e$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$34145cca5f88ff12$export$2e2bcd8739ae039","KeyboardZoom","$34145cca5f88ff12$var$__extends","charCode","charCodeAt","$41d16319c8c1b0db$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$85630051eb686f9c$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$85630051eb686f9c$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$85630051eb686f9c$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$e2293bab940f846d$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$e2293bab940f846d$var$__extends","rotationDelta","touch0","touch1","$e117dba55daaf75d$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$e117dba55daaf75d$var$__extends","scaleDelta","$ed77609b86999db4$export$2e2bcd8739ae039","Map","$e76ca1c65f4ba421$exports","zoomOptions","$ff05a73c45f7d002$exports","rotateOptions","attribution","$722ae5129753cc75$exports","attributionOptions","$92710edab151fa92$export$ebe90cb607ad99e","altShiftDragRotate","$b082c60249c1f369$exports","doubleClickZoom","$d1275b80afe8d488$exports","zoomDelta","zoomDuration","dragPan","$29127ef89ca20c43$exports","pinchRotate","$e2293bab940f846d$exports","pinchZoom","$e117dba55daaf75d$exports","keyboard","$2cdf72f37b05b43e$exports","$34145cca5f88ff12$exports","mouseWheelZoom","$85630051eb686f9c$exports","shiftDragZoom","$17d0f21fd121646e$exports","$9c22ccf5df5bef28$export$ebe90cb607ad99e","$ed77609b86999db4$var$__extends","$ac45132462ff44ba$exports","$3c4fb7ee83979696$exports","$b36f5815a624073b$export$2e2bcd8739ae039","$331f7c3db63eba4a$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$331f7c3db63eba4a$var$__extends","getPreload","getUseInterimTilesOnError","$c2da7fea2c1ff81d$export$2e2bcd8739ae039","$28ced5248e78fb1a$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$28ced5248e78fb1a$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$448cff2e6bd50582$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$448cff2e6bd50582$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","drawImage","getImageData","err","Uint8Array","$28ced5248e78fb1a$exports","$429f879763f86b24$var$TileRange","TileRange","containsTileRange","getHeight","getWidth","$429f879763f86b24$export$958e3e1a02eac4b6","$429f879763f86b24$export$2e2bcd8739ae039","$fc4508aaf02369b6$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$fc4508aaf02369b6$var$__extends","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","Number","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","i_1","drawTileImage","restore","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","alpha","alphaChanged","globalAlpha","endTransition","getImage","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$448cff2e6bd50582$exports","$fc4508aaf02369b6$export$2e2bcd8739ae039","$27512c06a847e2c7$export$2e2bcd8739ae039","TileLayer","$27512c06a847e2c7$var$__extends","$fc4508aaf02369b6$exports","$331f7c3db63eba4a$exports","$50e9f8fd6ffbdc36$export$2e2bcd8739ae039","Tile","interimTile","transition_","transitionStarts_","$50e9f8fd6ffbdc36$var$__extends","release","refreshInterimChain","getTileCoord","$f6fdec036521119c$export$2e2bcd8739ae039","ImageBase","$f6fdec036521119c$var$__extends","getPixelRatio","$f114746f48c74bfb$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$f114746f48c74bfb$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$f6fdec036521119c$exports","$3a11abda2dfcddda$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$3a11abda2dfcddda$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$f114746f48c74bfb$exports","listenImage","$50e9f8fd6ffbdc36$exports","$821eed05733f4176$var$brokenDiagonalRendering_","$5e15b4e30b78af8f$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$166b363f3d713487$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$821eed05733f4176$var$drawTestTriangle","u1","v1","u2","v2","closePath","$821eed05733f4176$var$verifyBrokenDiagonalRendering","$821eed05733f4176$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$821eed05733f4176$export$b3890eb0ae9dca99","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$31055d1b9520a441$export$8240f01c446270e6","$821eed05733f4176$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$c51038d738c357d3$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$821eed05733f4176$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$c51038d738c357d3$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","unlistenSources_","$6481cf675b9ee3e6$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$883b48f67f941a69$export$958e3e1a02eac4b6","opt_tileCoord","$883b48f67f941a69$export$92d0df0f1d25c63c","$883b48f67f941a69$export$a47fb462a08de82f","$b383aeae07df2cb9$export$2e2bcd8739ae039","TileCache","$b383aeae07df2cb9$var$__extends","pruneExceptNewestZ","$883b48f67f941a69$export$a807b7874eb66454","$bbf7f7732124b0b6$export$2e2bcd8739ae039","$866685fb1d7542ba$var$adaptAttributions","attributionLike","$866685fb1d7542ba$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$866685fb1d7542ba$var$__extends","refresh","setAttributions","$3a2df936479a540c$var$tmpTileCoord","$3a2df936479a540c$export$2e2bcd8739ae039","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getOrigin","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$a8e4a39ef4fbbded$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$a8e4a39ef4fbbded$var$resolutionsFromExtent","$a8e4a39ef4fbbded$export$ce88871416242df8","$a8e4a39ef4fbbded$export$7b5b6ef8fd55fac4","$a8e4a39ef4fbbded$export$a251b12f5601c16f","opt_maxResolution","half","$795ef51aca35207a$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$b383aeae07df2cb9$exports","tmpSize","tileOptions","$795ef51aca35207a$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$a8e4a39ef4fbbded$export$39a9ce3624977b84","$883b48f67f941a69$export$60bedf8e3e3c3dbe","$866685fb1d7542ba$exports","$795ef51aca35207a$export$c571855c51e6c4b6","TileSourceEvent","$795ef51aca35207a$export$2e2bcd8739ae039","$ad04c240cf3bec30$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$ad04c240cf3bec30$export$436f44dbcc31fea3","templates","tileUrlFunctions","$883b48f67f941a69$export$d6af199866bfb566","$ad04c240cf3bec30$export$4229b1d9af69b3be","$ab834229f220c892$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$ab834229f220c892$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$795ef51aca35207a$exports","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","stopCharCode","fromCharCode","stop_1","$ad04c240cf3bec30$export$2a1fa079bfd73dde","$8dc3b22dccd9c900$var$TileImage","TileImage","$8dc3b22dccd9c900$var$defaultTileLoadFunction","tileClass","$3a11abda2dfcddda$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$8dc3b22dccd9c900$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$c51038d738c357d3$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$ab834229f220c892$exports","imageTile","$8dc3b22dccd9c900$export$2e2bcd8739ae039","$79b213906de4bdc0$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$a8e4a39ef4fbbded$export$38500bbeccc864ff","$79b213906de4bdc0$var$__extends","$8dc3b22dccd9c900$exports","$aea6103379d651a4$export$4de8a5e77eb994ad","$aea6103379d651a4$export$2e2bcd8739ae039","OSM","$aea6103379d651a4$var$__extends","$79b213906de4bdc0$exports","_getCurrentLocation","geolocation","getCurrentPosition","latitude","longitude","$ed77609b86999db4$exports","$27512c06a847e2c7$exports","$aea6103379d651a4$exports","_zoomLevel","enumerable","configurable","writable","_currentPosition"],"version":3,"file":"index.d95dac6f.js.map"}